#!/usr/bin/env php
<?php

// PHP Config
ini_set('display_errors', 'on');
ini_set('error_reporting', E_ALL);
date_default_timezone_set('UTC');
@set_time_limit(20 * 60); // 20 min time limit ought to be enough for everyone

// Some constants
define('BELL', "\x07");

// Arguments check. Make sure we have 1 (filename) + 4
if (!isset($argc)) exit(BELL . 'This file must be called in CLI mode!' . PHP_EOL);
if ($argc < 5) exit(BELL . 'Invalid call! Got ' . ($argc-1) . ' arguments! (' . implode(', ', array_slice($argv, 1)) . ') instead of 4.' . PHP_EOL . 'Run this file as `' . $argv[0] . ' path/to/config env port handlerClass`' . PHP_EOL);

// Extract vars from arguments
list($thisfile, $configfile, $env, $port, $handlerClass) = $argv;

// Autoloader
$foundAutoloader = false;
$autoloaderCandidates = [
    '/../vendor/autoload.php',     // Git clone of package
    '/../../../autoload.php',      // Composer install of package (symlinked)
    '/../autoload.php',            // Composer install of package (copied)
];
foreach ($autoloaderCandidates as $candidate) {
    if (file_exists(__DIR__ . $candidate)) {
        require_once __DIR__ . $candidate;
        $foundAutoloader = true;
        break;
    }
}
if (!$foundAutoloader) {
    exit(BELL . 'Can not find autoloader. Make sure you ran `composer install`' . PHP_EOL);
}

// Require config
if (!@file_exists($configfile)) {
    exit(BELL . 'Can not load config file from location "' . $configfile . '"' . PHP_EOL);
}
$config = require $configfile;

// Create Application
$application = new \Plonk\Runtime\PubSub\Push\Application($config, $env);
$application
    ->with('handlerClassName', $handlerClass)
    ->with('port', $port)
    ->boot();
$application->run();